"""3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. 
При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, 
только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить 
соответствующее сообщение. При этом работа скрипта не должна завершаться."""


class MyError:
    def __init__(self, num):
        self.num = num
        self.my_list = []

    def input_(self):

        while True:
            try:
                num = int(input("Введите значения и нажимайте Enter: "))
                self.my_list.append(num)
                print(f"Текущий список - {self.my_list}")
            except:
                print("Недопустимые данные - строка или булево значение!")
                print("*" * 70)
                next_stop = input("Продолжить работу? Введите - yes/no : ")
                if next_stop == "Yes" or next_stop == "yes":
                    print(try_except.input_())
                elif next_stop == "No" or next_stop == "no":
                    print("Вы вышли!")


try_except = MyError(1)
print(try_except.input_())
